% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecasting.R
\name{build_model}
\alias{build_model}
\title{Build the appropriate model}
\usage{
build_model(model_choice, n_groupings, quo_groupfield, modb_eq,
  bandsums_eq, epi_known, ncores, theta)
}
\arguments{
\item{model_choice}{Critical argument to choose the type of model to generate.
The options are versions that the EPIDEMIA team has used for forecasting.
The first supported options is "poisson-bam" ("p") which is the original
epidemiar model: a Poisson regression using bam (for large data GAMs), with
a smoothed cyclical for seasonality. The default for fc_control$anom_env is
TRUE for using the anomalies of environmental variables rather than their
raw values. The second option is "negbin" ("n") which is a negative binomial
regression using glm, with no external seasonality terms - letting the
natural cyclical behavior of the environmental variables fill that role. The
default for fc_control$anom_env is FALSE and uses the actual observation
values in the modeling. The fc_control$anom_env can be overruled by the user
providing a value, but this is not recommended unless you are doing
comparisons.}

\item{n_groupings}{Count of the number of geographic groupings in the model.}

\item{quo_groupfield}{Quosure of the user given geographic grouping field to
run_epidemia().}

\item{modb_eq}{Pieces of the regression formula that include the modified
basis functions to account for long term trend (with or without groupings,
as appropriate).}

\item{bandsums_eq}{Pieces of the regression formula that include the b-spline
bandsummaries of the environmental factors.}

\item{epi_known}{Epidemiological dataset with basis spline summaries of the
lagged environmental data (or anomalies), with column marking if "known"
data and groupings converted to factors.}

\item{ncores}{The number of physical cores to use in parallel processing, set
in fc_control$ncores, else the max of the number of physical core available
minus 1, or 1 core.}

\item{theta}{From fc_control$theta, the value of theta for a "negbin" model.
If present, will use glm(..., family = MASS::negative.binomial(theta)).  If
missing, will use MASS::glm.nb().}
}
\value{
Regression object
}
\description{
Build the appropriate model
}
